require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
# require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")

require 'json'
podfile_properties = JSON.parse(File.read('./Podfile.properties.json')) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
  config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
else
  config_command = [
    'npx',
    'expo-modules-autolinking',
    'react-native-config',
    '--json',
    '--platform',
    'ios'
  ]
end

target 'Reams' do
  use_expo_modules!

  config = use_native_modules!(config_command)

  # library doesn't support autolinking
  # this needs to be above use_native_modules!
  pod 'RNTextSize', :path => "../node_modules/react-native-text-size/ios"

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    # https://github.com/facebook/flipper/issues/4278#issuecomment-1302015516
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )


  # # third party deps

  # https://github.com/alinz/react-native-share-extension/issues/182
  # target 'Reams Share2' do
  #   use_native_modules!
  #   inherit! :complete
  #   pod 'RNShareMenu', :path => '../node_modules/react-native-share-menu'
  # end

end

target 'Reams Share2' do
  use_expo_modules!
  config = use_native_modules!(config_command)
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true
  )

  pod 'RNShareMenu', :path => '../node_modules/react-native-share-menu'
end

# Force pods to match minimum iOS version for React Native
# Fixes build issue on Xcode Cloud where some pods
# Use iOS 12 calls despite being set as iOS 11
# referenced here: https://github.com/facebook/react-native/issues/36635
def __apply_Xcode_14_3_RC_post_install_workaround(installer)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      current_target = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
      minimum_target = 16.0
      if current_target.to_f < minimum_target.to_f
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = minimum_target
      end
    end
  end
end

# Add this, taken from: https://github.com/facebook/react-native/issues/25792#issuecomment-517295859
# https://github.com/alinz/react-native-share-extension/issues/182
post_install do |installer|
  config = use_native_modules!
  # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
  react_native_post_install(
    installer,
    config[:reactNativePath],
    :mac_catalyst_enabled => false,
    :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
  )

  # This is necessary for Xcode 14, because it signs resource bundles by default
  # when building for devices.
  installer.target_installation_results.pod_target_installation_results
    .each do |pod_name, target_installation_result|
    target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
      resource_bundle_target.build_configurations.each do |config|
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end

  installer.pods_project.targets.each do |target|
    # https://stackoverflow.com/a/70335609
    target.build_configurations.each do |config|
      # https://github.com/getsentry/sentry-react-native/issues/4095#issuecomment-2358568215
      if target.name != "Sentry"
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
      end
    end

    case target.name
    when 'RCT-Folly'
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '9.0'
      end
    end

    # Workaround build error for classic quoted imports
    # https://github.com/expo/expo/issues/15622#issuecomment-997178071
    # installer.pods_project.targets.each do |target|
    #   target.build_configurations.each do |config|
    #     unless ['React-Core', 'React-RCTText'].include? target.name
    #       config.build_settings["USE_HEADERMAP"] = "NO"
    #     end
    #   end
    # end

    # Workaround `Cycle inside FBReactNativeSpec` error for react-native 0.64
    # Reference: https://github.com/software-mansion/react-native-screens/issues/842#issuecomment-812543933
    # installer.pods_project.targets.each do |target|
    #   if (target.name&.eql?('FBReactNativeSpec'))
    #     target.build_phases.each do |build_phase|
    #       if (build_phase.respond_to?(:name) && build_phase.name.eql?('[CP-User] Generate Specs'))
    #         target.build_phases.move(build_phase, 0)
    #       end
    #     end
    #   end
    # end

    __apply_Xcode_14_3_RC_post_install_workaround(installer)

  end
end
