diff --git a/node_modules/react-native-share-menu/ios/ReactShareViewController.swift b/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
index f42bce6..7cfaba1 100644
--- a/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
+++ b/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
@@ -9,11 +9,14 @@
 
 import RNShareMenu
 
+@available(iOSApplicationExtension, unavailable)
+
 class ReactShareViewController: ShareViewController, RCTBridgeDelegate, ReactShareViewDelegate {
   func sourceURL(for bridge: RCTBridge!) -> URL! {
 #if DEBUG
-    return RCTBundleURLProvider.sharedSettings()?
-      .jsBundleURL(forBundleRoot: "index.share", fallbackResource: nil)
+    // Fix for this issue [#209](https://github.com/meedan/react-native-share-menu/issues/209#issuecomment-1366862532) in the `react-native-share-menu` repo.
+    return RCTBundleURLProvider.sharedSettings()
+      .jsBundleURL(forBundleRoot: "index.share")
 #else
     return Bundle.main.url(forResource: "main", withExtension: "jsbundle")
 #endif
@@ -25,7 +28,7 @@ class ReactShareViewController: ShareViewController, RCTBridgeDelegate, ReactSha
     let bridge: RCTBridge! = RCTBridge(delegate: self, launchOptions: nil)
     let rootView = RCTRootView(
       bridge: bridge,
-      moduleName: "ShareMenuModuleComponent",
+      moduleName: "RizzleShare",
       initialProperties: nil
     )
 
diff --git a/node_modules/react-native-share-menu/ios/ShareMenuManager.m b/node_modules/react-native-share-menu/ios/ShareMenuManager.m
index 308ec99..3c92827 100644
--- a/node_modules/react-native-share-menu/ios/ShareMenuManager.m
+++ b/node_modules/react-native-share-menu/ios/ShareMenuManager.m
@@ -6,7 +6,14 @@
 //
 
 #import "ShareMenuManager.h"
+
+// `use_frameworks!` moves this file to a different location
+// See: https://github.com/meedan/react-native-share-menu/issues/217#issuecomment-1301608521
+#if __has_include(<RNShareMenu/RNShareMenu-Swift.h>)
+#import <RNShareMenu/RNShareMenu-Swift.h>
+#else
 #import "RNShareMenu-Swift.h"
+#endif
 
 #import <React/RCTLinkingManager.h>
 
diff --git a/node_modules/react-native-share-menu/ios/ShareViewController.swift b/node_modules/react-native-share-menu/ios/ShareViewController.swift
index 12d8c92..0cef843 100644
--- a/node_modules/react-native-share-menu/ios/ShareViewController.swift
+++ b/node_modules/react-native-share-menu/ios/ShareViewController.swift
@@ -14,6 +14,8 @@ import UIKit
 import Social
 import RNShareMenu
 
+@available(iOSApplicationExtension, unavailable)
+
 class ShareViewController: SLComposeServiceViewController {
   var hostAppId: String?
   var hostAppUrlScheme: String?
@@ -222,21 +224,15 @@ class ShareViewController: SLComposeServiceViewController {
       return
     }
     
-    let url = URL(string: urlScheme)
-    let selectorOpenURL = sel_registerName("openURL:")
-    var responder: UIResponder? = self
-    
-    while responder != nil {
-      if responder?.responds(to: selectorOpenURL) == true {
-        responder?.perform(selectorOpenURL, with: url)
-      }
-      responder = responder!.next
+    guard let url = URL(string: urlScheme) else {
+      exit(withError: NO_INFO_PLIST_URL_SCHEME_ERROR)
+      return //be safe
     }
     
-    completeRequest()
+    UIApplication.shared.open(url, options: [:], completionHandler: completeRequest)
   }
   
-  func completeRequest() {
+  func completeRequest(success: Bool) {
     // Inform the host that we're done, so it un-blocks its UI. Note: Alternatively you could call super's -didSelectPost, which will similarly complete the extension context.
     extensionContext!.completeRequest(returningItems: [], completionHandler: nil)
   }
